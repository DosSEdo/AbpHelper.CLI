name: .NET Core

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  Packaging:
    runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         dotnet: [ '2.2.103', '3.0.100', '3.1.100', '3.1.101' ]
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.4.0
      with:
#         dotnet-version: ${{ matrix.dotnet }}
          dotnet-version: '3.1.101'
    - name: Install dependencies
      run: dotnet restore src/AbpHelper/AbpHelper.csproj
    - name: Build
      run: dotnet build src/AbpHelper/AbpHelper.csproj --configuration Release --no-restore
    - name: Nerdbank.GitVersioning
      uses: dotnet/nbgv@v0.3.1
      with:
        # The path to the directory for which the version should be determined. This should be at or below the directory containing the version.json file. Default is repo root directory.
        path: src/AbpHelper/
        # Defines ALL version variables as environment variables, with a "NBGV_" prefix.
        # setAllVars: # optional
        # Defines a few common version variables as environment variables, with a "Git" prefix (e.g. GitBuildVersion, GitBuildVersionSimple, GitAssemblyInformationalVersion).
        # setCommonVars: # optional
        # The version of the nbgv dotnet CLI tool to install and use. If not specified, the default is the latest stable version.
        # toolVersion: # optional
    - name: Test
      run: dotnet test src/AbpHelper/AbpHelper.csproj --no-restore --verbosity normal
#     - name: Packaging
#       run: dotnet pack src/AbpHelper/AbpHelper.csproj --no-restore --configuration Release --verbosity normal
#     - name: Publish
#       run: dotnet nuget push "src/bin/Release/AbpHelper.CLI.1.0.0.nupkg" --source "github"
    # Authenticates packages to push to GPR
    - uses: actions/setup-dotnet@v1
      with:
#         dotnet-version: ${{ matrix.dotnet }} # SDK Version to use.
        dotnet-version: '3.1.101'
        source-url: https://nuget.pkg.github.com/DosSEdo
      env:
#         NUGET_AUTH_TOKEN:  ${{secrets.NUGET_API_KEY}}
          NUGET_AUTH_TOKEN:  ${{ secrets.GITHUB_TOKEN }}
    - name: Create the package
      run: dotnet pack --no-restore --configuration Release --verbosity normal src/AbpHelper/AbpHelper.csproj 
    - name: Publish the package to GPR
      run: dotnet nuget push src/AbpHelper/bin/Release/*.nupkg -u blyzer -p ${{ secrets.GITHUB_TOKEN }} -s https://nuget.pkg.github.com/DosSEdo/index.json
    
#   publish:    
#     runs-on: ubuntu-latest
#     needs: [build]
#     steps:
#     - uses: actions/checkout@v2
#     - name: publish on version change
#       id: publish_nuget
#       uses: rohith/publish-nuget@v2
#       with:
#         # Filepath of the project to be packaged, relative to root of repository
#         PROJECT_FILE_PATH: src/AbpHelper/AbpHelper.csproj

#         # NuGet package id, used for version detection & defaults to project name
#         PACKAGE_NAME: AbpHelper.CLI

#         # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
#         # VERSION_FILE_PATH: Directory.Build.props

#         # Regex pattern to extract version info in a capturing group
#         # VERSION_REGEX: <Version>(.*)<\/Version>

#         # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
#         # VERSION_STATIC: 1.0.0

#         # Flag to toggle git tagging, enabled by default
#         TAG_COMMIT: true

#         # Format of the git tag, [*] gets replaced with actual version
#         # TAG_FORMAT: v*

#         # API key to authenticate with NuGet server
#         NUGET_KEY: ${{secrets.NUGET_API_KEY}}

#         # NuGet server uri hosting the packages, defaults to https://api.nuget.org
#         NUGET_SOURCE: https://nuget.pkg.github.com/dossedo/

#         # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
#         # INCLUDE_SYMBOLS: false
