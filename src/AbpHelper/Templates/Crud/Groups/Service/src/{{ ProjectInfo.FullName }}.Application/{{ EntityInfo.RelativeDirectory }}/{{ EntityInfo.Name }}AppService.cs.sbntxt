{{- if Option.SeparateDto
createDto = "Create" + EntityInfo.Name + "Dto"
updateDto = "Update" + EntityInfo.Name + "Dto"
else
createDto = "CreateUpdate" + EntityInfo.Name + "Dto"
updateDto = "CreateUpdate" + EntityInfo.Name + "Dto"
end -}}
{{- if Option.CustomRepository
repository = "I" + EntityInfo.Name + "Repository"
else
repository = "IRepository<" + EntityInfo.Name + ", " + EntityInfo.PrimaryKey + ">"
end -}}
using System;
{{~ if !Option.SkipPermissions 
        permissionNamesPrefix = ProjectInfo.Name + "Permissions." + EntityInfo.NamespaceLastPart
        if ProjectInfo.TemplateType == "Application"
            permissionNamespace = "Permissions"
        else if ProjectInfo.TemplateType == "Module"
            permissionNamespace = "Authorization"
        end
    end
~}}
using {{ ProjectInfo.FullName }}.{{ permissionNamespace }};
using {{ EntityInfo.Namespace }}.Dtos;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Application.Services;
{{~ if !Option.CustomRepository ~}}
using Volo.Abp.Domain.Repositories;
{{~ end ~}}

namespace {{ EntityInfo.Namespace }}
{
    public class {{ EntityInfo.Name }}AppService : CrudAppService<{{ EntityInfo.Name }}, {{ EntityInfo.Name }}Dto, {{ EntityInfo.PrimaryKey }}, PagedAndSortedResultRequestDto, {{ createDto }}, {{ updateDto }}>,
        I{{ EntityInfo.Name }}AppService
    {
        {{~ if !Option.SkipPermissions ~}}
        protected override string GetPolicyName { get; set; } = {{ permissionNamesPrefix }}.Default;
        protected override string GetListPolicyName { get; set; } = {{ permissionNamesPrefix }}.Default;
        protected override string CreatePolicyName { get; set; } = {{ permissionNamesPrefix }}.Create;
        protected override string UpdatePolicyName { get; set; } = {{ permissionNamesPrefix }}.Update;
        protected override string DeletePolicyName { get; set; } = {{ permissionNamesPrefix }}.Delete;
        {{~ end ~}}

        {{~ if Option.CustomRepository ~}}
        private readonly {{ repository }} _repository;
        
        public {{ EntityInfo.Name }}AppService({{ repository }} repository) : base(repository)
        {
            _repository = repository;
        }
        {{~ else ~}}
        public {{ EntityInfo.Name }}AppService({{ repository }} repository) : base(repository)
        {
        }
        {{~ end ~}}
    }
}